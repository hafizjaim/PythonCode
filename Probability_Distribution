1. Normal Distribution

from scipy.stats import norm

norm.cdf(x,mean,sd)                 #find probablity of x or less

norm.ppf(percentile,mean,sd)        #find value of based on the percentile

norm.rvs(mean, sd, size=x)          #generate random number



2. Central Theorem

# Set seed to 104
np.random.seed(104)
sample_means = []
# Loop 100 times
for i in range(100):
  # Take sample of 20 num_users
  samp_20 = df['column'].sample(20, replace=True)
  # Calculate mean of samp_20
  samp_20_mean = np.mean(samp_20)
  # Append samp_20_mean to sample_means
  sample_means.append(samp_20_mean)
  



3. Binomial Distribution
from scipy.stats import binom

prob_ = binom.pmf(no_head,no_trial,no_of_trial) #probability of no of head


4. Continuous Distribution
from scipy.stats import uniform

uniform.cdf(x,start,end) #probability of x

uniform.rvs(start,end,size=x) #generate x random number between start & end

5. Poisson Distribution

from scipy.stats import poisson

probability = poisson.pmf(x,mean) - # Probability of x responses

probability = poisson.cdf(x,mean) - # Probability of x responses


6. Exponential Distribution

#Probability of time between Poisson events
#EXAMPLES ; To further evaluate salesman's performance, 
you want to know how much time it takes him to respond to a lead after he opens it. On average, 
it takes 2.5 hours for him to respond. In this exercise, 
you'll calculate probabilities of different amounts of time passing between salesman receiving a lead and sending a response.

expon.cdf(1, scale=2.5)



7. T-distribution



